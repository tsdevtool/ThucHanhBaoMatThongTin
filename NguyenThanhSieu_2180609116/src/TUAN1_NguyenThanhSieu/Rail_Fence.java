/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TUAN1_NguyenThanhSieu;

import java.util.Arrays;
import javax.swing.JOptionPane;

/**
 *
 * @author Administrator
 */
public class Rail_Fence extends javax.swing.JFrame {

    /**
     * Creates new form Rail_Fence
     */
    public Rail_Fence() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtplaintext = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        txtkey = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtciphertext = new javax.swing.JTextArea();
        btnencrypt = new javax.swing.JButton();
        btndecrypt = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("PlainText:");

        txtplaintext.setColumns(20);
        txtplaintext.setRows(5);
        jScrollPane1.setViewportView(txtplaintext);

        jLabel3.setText("Key:");

        txtkey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtkeyActionPerformed(evt);
            }
        });

        jLabel4.setText("CipherText:");

        txtciphertext.setColumns(20);
        txtciphertext.setRows(5);
        jScrollPane2.setViewportView(txtciphertext);

        btnencrypt.setText("Encrypt");
        btnencrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnencryptActionPerformed(evt);
            }
        });

        btndecrypt.setText("Decrypt");
        btndecrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndecryptActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("RAIL FENCE ENCRYPTION");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btndecrypt)
                        .addGap(53, 53, 53))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(14, 14, 14)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2))
                            .addGap(18, 18, 18)
                            .addComponent(txtkey))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(93, 93, 93)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(btnencrypt)))))
                .addGap(20, 20, 20))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(92, 92, 92)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1)
                        .addComponent(jScrollPane2))
                    .addGap(17, 17, 17)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(12, 12, 12)
                .addComponent(jLabel2)
                .addGap(89, 89, 89)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtkey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addComponent(btnencrypt)
                .addGap(22, 22, 22)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(btndecrypt)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(22, 22, 22)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(85, 85, 85)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(46, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtkeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtkeyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtkeyActionPerformed

    private void btnencryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnencryptActionPerformed
        // TODO add your handling code here:
        try{
            String plain = txtplaintext.getText();
            int key = Integer.valueOf(txtkey.getText());
            String cipher = encryptRailFence(plain,key);
            txtciphertext.setText(cipher.toUpperCase());
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Kiểm tra hàm nhập và key là một chữ số");
        }
    }//GEN-LAST:event_btnencryptActionPerformed

    private void btndecryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndecryptActionPerformed
        // TODO add your handling code here:
        try{
            String Cipher = txtciphertext.getText();
            int key = Integer.valueOf(txtkey.getText());
            String Plain = decryptRailFence(Cipher, key);
            txtplaintext.setText(Plain.toUpperCase());
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Kiểm tra hàm nhập và key là một chữ số");
        }
    }//GEN-LAST:event_btndecryptActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Rail_Fence.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Rail_Fence.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Rail_Fence.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Rail_Fence.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Rail_Fence().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btndecrypt;
    private javax.swing.JButton btnencrypt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtciphertext;
    private javax.swing.JTextField txtkey;
    private javax.swing.JTextArea txtplaintext;
    // End of variables declaration//GEN-END:variables

    private static String encryptRailFence(String text, int key) {
        char[][] rail = new char[key][text.length()];
        
        for(int i = 0; i<key; i++){
            Arrays.fill(rail[i], '\n');
        }
        
        boolean DirDown = false;
        
        int row = 0, col = 0;
        for(int i = 0; i<text.length();i++){
            if(row == 0 || row == key-1){
                DirDown=!DirDown;
            }
            
            rail[row][col++] = text.charAt(i);
            
            if (DirDown)
                row++;
            else
                row--;
        }
        
        StringBuilder result = new StringBuilder();
        
        for(int i = 0; i<key; i++){
            for(int j = 0; j<text.length(); j++)
                if(rail[i][j] != '\n')
                    result.append(rail[i][j]);
        }
        return result.toString();
    }

    private static String decryptRailFence(String cipher, int key) {
        char [][] DeRail = new char[key][cipher.length()];
        
        for(int i = 0; i<key; i++)
            Arrays.fill(DeRail[i], '\n');
        boolean dirDown = true;
        
        int row = 0, col = 0;
        
        for(int i = 0; i<cipher.length(); i++){
            if(row == 0) dirDown = true;
            if(row == key-1) dirDown = false;
            
            DeRail[row][col++] = '*';
            
            if(dirDown) row++;
            else row--;
        }
        
        int index = 0;
        for(int i = 0; i<key; i++)
            for(int j = 0; j<cipher.length(); j++)
                if(DeRail[i][j] == '*' && index < cipher.length())
                    DeRail[i][j] = cipher.charAt(index++);
        
        StringBuilder result = new StringBuilder();
        
        row= 0;
        col = 0;
        
        for(int i = 0; i<cipher.length();i++){
            if(row == 0)    dirDown = true;
            if(row == key -1 ) dirDown = false;
            
            if(DeRail[row][col] != '*')
                result.append(DeRail[row][col++]);
            if(dirDown) row++;
            else row--;
            
        }
        return result.toString();
    }
}
